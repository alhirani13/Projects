


ARM Macro Assembler    Page 1 


    1 00000000         ; LCD.s
    2 00000000         ; Student names: Dylan Keeton & Al Hirani
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         
    5 00000000         ; Runs on LM4F120/TM4C123
    6 00000000         ; Use SSI0 to send an 8-bit code to the ST7735 160x128 p
                       ixel LCD.
    7 00000000         
    8 00000000         ; As part of Lab 7, students need to implement these LCD
                       _WriteCommand and LCD_WriteData
    9 00000000         ; This driver assumes two low-level LCD functions
   10 00000000         
   11 00000000         ; Backlight (pin 10) connected to +3.3 V
   12 00000000         ; MISO (pin 9) unconnected
   13 00000000         ; SCK (pin 8) connected to PA2 (SSI0Clk)
   14 00000000         ; MOSI (pin 7) connected to PA5 (SSI0Tx)
   15 00000000         ; TFT_CS (pin 6) connected to PA3 (SSI0Fss)
   16 00000000         ; CARD_CS (pin 5) unconnected
   17 00000000         ; Data/Command (pin 4) connected to PA6 (GPIO)
   18 00000000         ; RESET (pin 3) connected to PA7 (GPIO)
   19 00000000         ; VCC (pin 2) connected to +3.3 V
   20 00000000         ; Gnd (pin 1) connected to ground
   21 00000000         
   22 00000000 400043FC 
                       GPIO_PORTA_DATA_R
                               EQU              0x400043FC
   23 00000000 40008008 
                       SSI0_DR_R
                               EQU              0x40008008
   24 00000000 4000800C 
                       SSI0_SR_R
                               EQU              0x4000800C
   25 00000000 00000004 
                       SSI_SR_RNE
                               EQU              0x00000004  ; SSI Receive FIFO 
                                                            Not Empty
   26 00000000 00000010 
                       SSI_SR_BSY
                               EQU              0x00000010  ; SSI Busy Bit
   27 00000000 00000002 
                       SSI_SR_TNF
                               EQU              0x00000002  ; SSI Transmit FIFO
                                                             Not Full
   28 00000000         
   29 00000000                 EXPORT           writecommand
   30 00000000                 EXPORT           writedata
   31 00000000         
   32 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   33 00000000                 THUMB
   34 00000000                 ALIGN
   35 00000000         
   36 00000000         ; The Data/Command pin must be valid when the eighth bit
                        is
   37 00000000         ; sent.  The SSI module has hardware input and output FI
                       FOs
   38 00000000         ; that are 8 locations deep.  Based on the observation t
                       hat



ARM Macro Assembler    Page 2 


   39 00000000         ; the LCD interface tends to send a few commands and the
                       n a
   40 00000000         ; lot of data, the FIFOs are not used when writing
   41 00000000         ; commands, and they are used when writing data.  This
   42 00000000         ; ensures that the Data/Command pin status matches the b
                       yte
   43 00000000         ; that is actually being transmitted.
   44 00000000         ; The write command operation waits until all data has b
                       een
   45 00000000         ; sent, configures the Data/Command pin for commands, se
                       nds
   46 00000000         ; the command, and then waits for the transmission to
   47 00000000         ; finish.
   48 00000000         ; The write data operation waits until there is room in 
                       the
   49 00000000         ; transmit FIFO, configures the Data/Command pin for dat
                       a,
   50 00000000         ; and then adds the data to the transmit FIFO.
   51 00000000         ; NOTE: These functions will crash or stall indefinitely
                        if
   52 00000000         ; the SSI0 module is not initialized and enabled.
   53 00000000         
   54 00000000         ; This is a helper function that sends an 8-bit command 
                       to the LCD.
   55 00000000         ; Input: R0  8-bit command to transmit
   56 00000000         ; Output: none
   57 00000000         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   58 00000000         writecommand
   59 00000000         ;1) Read SSI0_SR_R and check bit 4, 
   60 00000000         ;2) If bit 4 is high, loop back to step 1 (wait for BUSY
                        bit to be low)
   61 00000000         ;3) Clear D/C=PA6 to zero
   62 00000000         ;4) Write the command to SSI0_DR_R
   63 00000000         ;5) Read SSI0_SR_R and check bit 4, 
   64 00000000         ;6) If bit 4 is high, loop back to step 5 (wait for BUSY
                        bit to be low)
   65 00000000 490F            LDR              R1,=SSI0_SR_R
   66 00000002         BIT4CHECK
   67 00000002 680A            LDR              R2,[R1]
   68 00000004 F012 0210       ANDS             R2,#0x10
   69 00000008 D1FB            BNE              BIT4CHECK
   70 0000000A 490E            LDR              R1,=GPIO_PORTA_DATA_R
   71 0000000C 680A            LDR              R2,[R1]
   72 0000000E F022 0240       BIC              R2,#0x40
   73 00000012 600A            STR              R2,[R1]
   74 00000014 490C            LDR              R1,=SSI0_DR_R
   75 00000016 6008            STR              R0,[R1]
   76 00000018 4909            LDR              R1,=SSI0_SR_R
   77 0000001A         BIT4CHECK2
   78 0000001A 680A            LDR              R2,[R1]
   79 0000001C F012 0210       ANDS             R2,#0x10
   80 00000020 D1FB            BNE              BIT4CHECK2
   81 00000022 4770            BX               LR          ;   return
   82 00000024         
   83 00000024         ; This is a helper function that sends an 8-bit data to 
                       the LCD.
   84 00000024         ; Input: R0  8-bit data to transmit
   85 00000024         ; Output: none



ARM Macro Assembler    Page 3 


   86 00000024         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   87 00000024         writedata
   88 00000024         ;1) Read SSI0_SR_R and check bit 1, 
   89 00000024         ;2) If bit 1 is low loop back to step 1 (wait for TNF bi
                       t to be high)
   90 00000024         ;3) Set D/C=PA6 to one
   91 00000024         ;4) Write the 8-bit data to SSI0_DR_R
   92 00000024 4906            LDR              R1,=SSI0_SR_R
   93 00000026         BIT1CHECK
   94 00000026 680A            LDR              R2,[R1]
   95 00000028 F012 0202       ANDS             R2,#0x02
   96 0000002C D0FB            BEQ              BIT1CHECK
   97 0000002E 4905            LDR              R1,=GPIO_PORTA_DATA_R
   98 00000030 680A            LDR              R2,[R1]
   99 00000032 F042 0240       ORR              R2,#0x40
  100 00000036 600A            STR              R2,[R1]
  101 00000038 4903            LDR              R1,=SSI0_DR_R
  102 0000003A 6008            STR              R0,[R1]
  103 0000003C 4770            BX               LR          ;   return
  104 0000003E         
  105 0000003E         
  106 0000003E         ;***************************************************
  107 0000003E         ; This is a library for the Adafruit 1.8" SPI display.
  108 0000003E         ; This library works with the Adafruit 1.8" TFT Breakout
                        w/SD card
  109 0000003E         ; ----> http://www.adafruit.com/products/358
  110 0000003E         ; as well as Adafruit raw 1.8" TFT display
  111 0000003E         ; ----> http://www.adafruit.com/products/618
  112 0000003E         ;
  113 0000003E         ; Check out the links above for our tutorials and wiring
                        diagrams
  114 0000003E         ; These displays use SPI to communicate, 4 or 5 pins are
                        required to
  115 0000003E         ; interface (RST is optional)
  116 0000003E         ; Adafruit invests time and resources providing this ope
                       n source code,
  117 0000003E         ; please support Adafruit and open-source hardware by pu
                       rchasing
  118 0000003E         ; products from Adafruit!
  119 0000003E         ;
  120 0000003E         ; Written by Limor Fried/Ladyada for Adafruit Industries
                       .
  121 0000003E         ; MIT license, all text above must be included in any re
                       distribution
  122 0000003E         ;****************************************************
  123 0000003E         
  124 0000003E 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  125 00000040                 END                          ; end of file
              4000800C 
              400043FC 
              40008008 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\lcd.d 
-o.\lcd.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\
Luminary --predefine="__EVAL SETA 1" --list=.\lcd.lst LCD.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 32 in file LCD.s
   Uses
      None
Comment: .text unused
BIT1CHECK 00000026

Symbol: BIT1CHECK
   Definitions
      At line 93 in file LCD.s
   Uses
      At line 96 in file LCD.s
Comment: BIT1CHECK used once
BIT4CHECK 00000002

Symbol: BIT4CHECK
   Definitions
      At line 66 in file LCD.s
   Uses
      At line 69 in file LCD.s
Comment: BIT4CHECK used once
BIT4CHECK2 0000001A

Symbol: BIT4CHECK2
   Definitions
      At line 77 in file LCD.s
   Uses
      At line 80 in file LCD.s
Comment: BIT4CHECK2 used once
writecommand 00000000

Symbol: writecommand
   Definitions
      At line 58 in file LCD.s
   Uses
      At line 29 in file LCD.s
Comment: writecommand used once
writedata 00000024

Symbol: writedata
   Definitions
      At line 87 in file LCD.s
   Uses
      At line 30 in file LCD.s
Comment: writedata used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTA_DATA_R 400043FC

Symbol: GPIO_PORTA_DATA_R
   Definitions
      At line 22 in file LCD.s
   Uses
      At line 70 in file LCD.s
      At line 97 in file LCD.s

SSI0_DR_R 40008008

Symbol: SSI0_DR_R
   Definitions
      At line 23 in file LCD.s
   Uses
      At line 74 in file LCD.s
      At line 101 in file LCD.s

SSI0_SR_R 4000800C

Symbol: SSI0_SR_R
   Definitions
      At line 24 in file LCD.s
   Uses
      At line 65 in file LCD.s
      At line 76 in file LCD.s
      At line 92 in file LCD.s

SSI_SR_BSY 00000010

Symbol: SSI_SR_BSY
   Definitions
      At line 26 in file LCD.s
   Uses
      None
Comment: SSI_SR_BSY unused
SSI_SR_RNE 00000004

Symbol: SSI_SR_RNE
   Definitions
      At line 25 in file LCD.s
   Uses
      None
Comment: SSI_SR_RNE unused
SSI_SR_TNF 00000002

Symbol: SSI_SR_TNF
   Definitions
      At line 27 in file LCD.s
   Uses
      None
Comment: SSI_SR_TNF unused
6 symbols
345 symbols in table
