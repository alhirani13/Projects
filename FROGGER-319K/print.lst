


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: Dylan Keeton & Al Hirani
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           ST7735_OutChar
   13 00000000                 IMPORT           ST7735_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000         
   17 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   18 00000000                 THUMB
   19 00000000         
   20 00000000         
   21 00000000         
   22 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   23 00000000         ; Output a 32-bit number in unsigned decimal format
   24 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   25 00000000         ; Output: none
   26 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   27 00000000         LCD_OutDec
   28 00000000 00000000 
                       PLACE   EQU              0
   29 00000000 3B9ACA00 
                       BILLION EQU              1000000000  ;HIGHEST POSSIBLE T
                                                            HING TO DIVIDE
   30 00000000 E92D 4FF8       PUSH             {R3-R11,LR} ;PUSH ALL RESISTORS
                                                             WE CANT AFFECT
   31 00000004 4936            LDR              R1,=BILLION ;LETS START DIVIDIN
                                                            G CHIEF
   32 00000006 B482            PUSH             {R1,R7}
   33 00000008 F04F 030A       MOV              R3,#10      ;TO DIVIDE BILLION 
                                                            ALL THE WAY DOWN TO
                                                             1'S PLACE
   34 0000000C 3000            ADDS             R0,#0       ;CHECK IF R0 IS 0
   35 0000000E D01D            BEQ              ZERO        ;IF 0 BRANCH 
   36 00000010         
   37 00000010 9900    CHECK   LDR              R1,[SP,#PLACE]
   38 00000012 FBB0 F2F1       UDIV             R2,R0,R1    ;R0/WHATEVER PLACE 
                                                            R1 IS SUCH AS 1S,10
                                                            S,100S,ETC.
   39 00000016 2A00            CMP              R2,#0       ;IF NUMBER IS LESS 
                                                            THAN R1
   40 00000018 D108            BNE              NEXT        ;IF IT IS 0, WE CAN
                                                             MOVE DOWN TO NEXT 
                                                            PLACE.. R1/10
   41 0000001A FBB1 F1F3       UDIV             R1,R1,R3    ;R1/10



ARM Macro Assembler    Page 2 


   42 0000001E 9100            STR              R1,[SP,#PLACE]
   43 00000020 2900            CMP              R1,#0       ;IF WE ARE AT 1S PL
                                                            ACE AND DIVIDE BY 1
                                                            0, WE ARE DONE
   44 00000022 D017            BEQ              DONE        ;BRANCH IF DONE DIV
                                                            IDING
   45 00000024 E7F4            B                CHECK       ;GO TO NEXT PLACE
   46 00000026         
   47 00000026 9900    CHEK    LDR              R1,[SP,#PLACE]
   48 00000028 FBB0 F2F1       UDIV             R2,R0,R1    ;R0/WHATEVER PLACE 
                                                            R1 IS SUCH AS 1S,10
                                                            S,100S,ETC.
   49 0000002C B40F    NEXT    PUSH             {R0-R3}     ;PUSH THE REGISTERS
                                                             WE ARE WORKING WIT
                                                            H
   50 0000002E F102 0030       ADD              R0,R2,#0x30 ;ADD 0x30 TO MAKE A
                                                            SCII CHARACTER
   51 00000032 F7FF FFFE       BL               ST7735_OutChar ;PRINT NUMBER
   52 00000036 BC0F            POP              {R0-R3}     ;POP REGISTERS WE W
                                                            ORKING WITH
   53 00000038 FB02 F201       MUL              R2,R2,R1    ;WE ARE NOW-
   54 0000003C EBA0 0002       SUB              R0,R0,R2    ;GETTING THE REMAIN
                                                            DER FROM THE DIVISI
                                                            ON
   55 00000040 FBB1 F1F3       UDIV             R1,R1,R3    ;DIVIDE R1 BY 10
   56 00000044 9100            STR              R1,[SP,#PLACE]
   57 00000046 2900            CMP              R1,#0       ;IF WE HAVE JUST DO
                                                            NE 1S PLACE WE ARE 
                                                            DONE
   58 00000048 D004            BEQ              DONE        ;BRANCH IF DONE DIV
                                                            IDING
   59 0000004A E7EC            B                CHEK        ;ELSE KEEP DIVIDING
                                                            
   60 0000004C         
   61 0000004C F100 0030 
                       ZERO    ADD              R0,#0x30    ;IF 0 JUST PRINT OU
                                                            T ASCII FOR 0
   62 00000050 F7FF FFFE       BL               ST7735_OutChar ;PRINT 0
   63 00000054 BC82    DONE    POP              {R1,R7}
   64 00000056 E8BD 4FF8       POP              {R3-R11,LR} ;POP NONUSABLE REGI
                                                            STERS
   65 0000005A 4770            BX               LR          ;LEAVE SUBROUTINE
   66 0000005C         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   67 0000005C         
   68 0000005C         ; -----------------------LCD _OutFix--------------------
                       --
   69 0000005C         ; Output characters to LCD display in fixed-point format
                       
   70 0000005C         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   71 0000005C         ; Inputs:  R0 is an unsigned 32-bit number
   72 0000005C         ; Outputs: none
   73 0000005C         ; E.g., R0=0,    then output "0.000 "
   74 0000005C         ;       R0=3,    then output "0.003 "
   75 0000005C         ;       R0=89,   then output "0.089 "
   76 0000005C         ;       R0=123,  then output "0.123 "
   77 0000005C         ;       R0=9999, then output "9.999 "
   78 0000005C         ;       R0>9999, then output "*.*** "
   79 0000005C         ; Invariables: This function must not permanently modify



ARM Macro Assembler    Page 3 


                        registers R4 to R11
   80 0000005C         LCD_OutFix
   81 0000005C         
   82 0000005C 00000000 
                       PLACE1  EQU              0
   83 0000005C 000003E8 
                       THOUSAND
                               EQU              1000
   84 0000005C 00002710 
                       TENK    EQU              10000
   85 0000005C E92D 4FF8       PUSH             {R3-R11,LR} ;PUSH WHAT REGISTER
                                                            S WE ARE USING
   86 00000060 F04F 030A       MOV              R3,#10      ;R3 = 10 SO WE CAN 
                                                            MOVE WHICH PLACE WE
                                                             ARE IN
   87 00000064 F44F 717A       LDR              R1,=THOUSAND ;SET R1 TO HIGHEST
                                                             DIVISOR
   88 00000068 B482            PUSH             {R1,R7}
   89 0000006A F242 7510       LDR              R5,=TENK    ;CHECK IF NUMBER > 
                                                            9999
   90 0000006E 42A8            CMP              R0,R5       ;IF SO WE WILL BRAN
                                                            CH
   91 00000070 D220            BHS              STARS       ;GO TO ALL STARS
   92 00000072         
   93 00000072 9900    CHEC    LDR              R1,[SP,#PLACE]
   94 00000074 FBB0 F2F1       UDIV             R2,R0,R1    ;GET DIVDIDED ANSWE
                                                            R WITHOUT REMIANDER
                                                            
   95 00000078 B40F            PUSH             {R0-R3}     ;PUSH REGISTERS WE 
                                                            ARE USING
   96 0000007A 4610            MOV              R0,R2       ;PRINT THE ANSWER O
                                                            F DIVISION EXPRESSI
                                                            ON
   97 0000007C F100 0030       ADD              R0,#0x30    ;CHANGE IT TO ASCII
                                                             CHARACTER
   98 00000080 F7FF FFFE       BL               ST7735_OutChar ;PRINT NUMBER
   99 00000084 BC0F            POP              {R0-R3}     ;POP BACK THE REGIS
                                                            TERS
  100 00000086 F5B1 7F7A       CMP              R1,#1000    ;CHECK IF IT WAS TH
                                                            E FIRST NUMBER
  101 0000008A D105            BNE              PASTDECIMAL ;IF NOT MOVE FORWAR
                                                            D  
  102 0000008C B40F            PUSH             {R0-R3}     ;IF IT WAS
  103 0000008E F04F 002E       MOV              R0,#0x2E    ;WE NEED TO PRINT A
                                                             DECIMAL POINT
  104 00000092 F7FF FFFE       BL               ST7735_OutChar ;PRINT OUT THE P
                                                            OINT
  105 00000096 BC0F            POP              {R0-R3}     ;POP BACK THE REGIS
                                                            TERS
  106 00000098         PASTDECIMAL
  107 00000098 FB02 F201       MUL              R2,R2,R1    ;DO THE DIVISION EX
                                                            PRESSION
  108 0000009C EBA0 0002       SUB              R0,R0,R2    ; AND SUBTRACT FROM
                                                             ORIGINAL NUMBER
  109 000000A0 FBB1 F1F3       UDIV             R1,R1,R3    ;TO GET THE REMAIND
                                                            ER
  110 000000A4 9100            STR              R1,[SP,#PLACE]
  111 000000A6 2900            CMP              R1,#0       ;IF WE ARE DONE DIV
                                                            IDING



ARM Macro Assembler    Page 4 


  112 000000A8 D000            BEQ              FIN         ;BRANCH OUT
  113 000000AA E7E2            B                CHEC        ;IF NOT GO TO NEXT 
                                                            PLACE
  114 000000AC BC82    FIN     POP              {R1,R7}
  115 000000AE E8BD 4FF8       POP              {R3-R11,LR} ;POP ALL SAVED REGI
                                                            STERS
  116 000000B2 4770            BX               LR          ;LEAVE SUBROUTINE
  117 000000B4         
  118 000000B4         STARS
  119 000000B4 F04F 002A       MOV              R0,#0x2A    ;CODE FOR PRINTING 
                                                            OUT *.***
  120 000000B8 F7FF FFFE       BL               ST7735_OutChar ;|
  121 000000BC F04F 002E       MOV              R0,#0x2E    ;|
  122 000000C0 F7FF FFFE       BL               ST7735_OutChar ;IN THE EVENT TH
                                                            AT THE NUMBER IS > 
                                                            9999
  123 000000C4 F04F 002A       MOV              R0,#0x2A    ;|
  124 000000C8 F7FF FFFE       BL               ST7735_OutChar ;|
  125 000000CC F04F 002A       MOV              R0,#0x2A    ;|
  126 000000D0 F7FF FFFE       BL               ST7735_OutChar ;|
  127 000000D4 F04F 002A       MOV              R0,#0x2A    ;|
  128 000000D8 F7FF FFFE       BL               ST7735_OutChar ;|
  129 000000DC E7E6            B                FIN         ;|
  130 000000DE         
  131 000000DE         
  132 000000DE 00 00           ALIGN
  133 000000E0         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  134 000000E0         
  135 000000E0                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  136 000000E0                 END                          ; end of file
              3B9ACA00 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\print.
d -o.\print.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\
Inc\Luminary --predefine="__EVAL SETA 1" --list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 17 in file Print.s
   Uses
      None
Comment: .text unused
CHEC 00000072

Symbol: CHEC
   Definitions
      At line 93 in file Print.s
   Uses
      At line 113 in file Print.s
Comment: CHEC used once
CHECK 00000010

Symbol: CHECK
   Definitions
      At line 37 in file Print.s
   Uses
      At line 45 in file Print.s
Comment: CHECK used once
CHEK 00000026

Symbol: CHEK
   Definitions
      At line 47 in file Print.s
   Uses
      At line 59 in file Print.s
Comment: CHEK used once
DONE 00000054

Symbol: DONE
   Definitions
      At line 63 in file Print.s
   Uses
      At line 44 in file Print.s
      At line 58 in file Print.s

FIN 000000AC

Symbol: FIN
   Definitions
      At line 114 in file Print.s
   Uses
      At line 112 in file Print.s
      At line 129 in file Print.s

LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 27 in file Print.s
   Uses
      At line 14 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 0000005C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: LCD_OutFix
   Definitions
      At line 80 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutFix used once
NEXT 0000002C

Symbol: NEXT
   Definitions
      At line 49 in file Print.s
   Uses
      At line 40 in file Print.s
Comment: NEXT used once
PASTDECIMAL 00000098

Symbol: PASTDECIMAL
   Definitions
      At line 106 in file Print.s
   Uses
      At line 101 in file Print.s
Comment: PASTDECIMAL used once
STARS 000000B4

Symbol: STARS
   Definitions
      At line 118 in file Print.s
   Uses
      At line 91 in file Print.s
Comment: STARS used once
ZERO 0000004C

Symbol: ZERO
   Definitions
      At line 61 in file Print.s
   Uses
      At line 35 in file Print.s
Comment: ZERO used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BILLION 3B9ACA00

Symbol: BILLION
   Definitions
      At line 29 in file Print.s
   Uses
      At line 31 in file Print.s
Comment: BILLION used once
PLACE 00000000

Symbol: PLACE
   Definitions
      At line 28 in file Print.s
   Uses
      At line 37 in file Print.s
      At line 42 in file Print.s
      At line 47 in file Print.s
      At line 56 in file Print.s
      At line 93 in file Print.s
      At line 110 in file Print.s

PLACE1 00000000

Symbol: PLACE1
   Definitions
      At line 82 in file Print.s
   Uses
      None
Comment: PLACE1 unused
TENK 00002710

Symbol: TENK
   Definitions
      At line 84 in file Print.s
   Uses
      At line 89 in file Print.s
Comment: TENK used once
THOUSAND 000003E8

Symbol: THOUSAND
   Definitions
      At line 83 in file Print.s
   Uses
      At line 87 in file Print.s
Comment: THOUSAND used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 51 in file Print.s
      At line 62 in file Print.s
      At line 98 in file Print.s
      At line 104 in file Print.s
      At line 120 in file Print.s
      At line 122 in file Print.s
      At line 124 in file Print.s
      At line 126 in file Print.s
      At line 128 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
352 symbols in table
